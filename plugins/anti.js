const fs=require('fs');const path=require('path');const{readEnv}=require('../lib/database');const{cmd,commands}=require('../command');const{fetchJson}=require('../lib/functions');cmd({on:"sticker"},async(conn,mek,m,{from,isGroup,isOwner,isAdmins,groupAdmins,isBotAdmins,sender})=>{try{const config=await readEnv();const botOwner=config.OWNER_NUMBER;if(config.ANTI_STICKER==='true'){if(isGroup){if(isBotAdmins){const senderIsAdmin=groupAdmins.includes(sender);if(!senderIsAdmin&&!isOwner){const key={remoteJid:from,fromMe:false,id:mek.key.id,participant:sender};await conn.sendMessage(from,{delete:key});const warningMessage=`üñºÔ∏è ~*@${sender.split('@')[0]}*~\n*‚ö†Ô∏è ùó¶ùóßùóúùóñùóûùóòùó• ùóóùóòùóüùóòùóßùóòùóó: ‚ÄºÔ∏è*`;await conn.sendMessage(from,{text:warningMessage,mentions:[sender]});const ownerMessage=`üö® Anti-sticker triggered in *${groupName}*.\nSender: @${sender.split('@')[0]}\nSticker message has been deleted.`;await conn.sendMessage(botOwner,{text:ownerMessage,mentions:[sender]});}}else{const adminsMention=groupAdmins.map(admin=>`@${admin.split('@')[0]}`).join(' ');const botNotAdminMessage=`‚ö†Ô∏è DilaMD bot does not have admin privileges, but a sticker with prohibited content was detected. Please take action, admins:\n${adminsMention}`;await conn.sendMessage(from,{text:botNotAdminMessage,mentions:groupAdmins});}}}}catch(e){console.error(`Error in auto-delete sticker functionality: ${e.message}`);const botOwner=config.OWNER_NUMBER;await conn.sendMessage(botOwner,{text:`‚ö†Ô∏è Error occurred in auto-delete sticker functionality: ${e.message}`});}});cmd({on:"audio"},async(conn,mek,m,{from,isGroup,isOwner,isAdmins,groupAdmins,isBotAdmins,sender})=>{try{const config=await readEnv();const botOwner=config.OWNER_NUMBER;if(config.ANTI_VOICE==='true'){if(isGroup){if(isBotAdmins){const senderIsAdmin=groupAdmins.includes(sender);if(!senderIsAdmin&&!isOwner){const key={remoteJid:from,fromMe:false,id:mek.key.id,participant:sender};await conn.sendMessage(from,{delete:key});const warningMessage=`üéôÔ∏è ~*@${sender.split('@')[0]}*~\n*‚ö†Ô∏è ùóîùó®ùóóùóúùó¢ ùó†ùóòùó¶ùó¶ùóîùóöùóò ùóóùóòùóüùóòùóßùóòùóó: ‚ÄºÔ∏è*`;await conn.sendMessage(from,{text:warningMessage,mentions:[sender]});const ownerMessage=`üö® Anti-audio triggered in *${groupName}*.\nSender: @${sender.split('@')[0]}\nAudio message has been deleted.`;await conn.sendMessage(botOwner,{text:ownerMessage,mentions:[sender]});}}else{const adminsMention=groupAdmins.map(admin=>`@${admin.split('@')[0]}`).join(' ');const botNotAdminMessage=`‚ö†Ô∏è DilaMD bot does not have admin privileges, but an audio message was detected. Please take action, admins:\n${adminsMention}`;await conn.sendMessage(from,{text:botNotAdminMessage,mentions:groupAdmins});}}}}catch(e){console.error(`Error in auto-delete audio functionality: ${e.message}`);const botOwner=config.OWNER_NUMBER;await conn.sendMessage(botOwner,{text:`‚ö†Ô∏è Error occurred in auto-delete audio functionality: ${e.message}`});}});cmd({on:"image"},async(conn,mek,m,{from,isGroup,isOwner,isAdmins,groupAdmins,isBotAdmins,sender})=>{try{const config=await readEnv();const botOwner=config.OWNER_NUMBER;if(config.ANTI_PHOTO==='true'){if(isGroup){if(isBotAdmins){const senderIsAdmin=groupAdmins.includes(sender);if(!senderIsAdmin&&!isOwner){const key={remoteJid:from,fromMe:false,id:mek.key.id,participant:sender};await conn.sendMessage(from,{delete:key});const warningMessage=`üñºÔ∏è ~*@${sender.split('@')[0]}*~\n*‚ö†Ô∏è ùó£ùóõùó¢ùóßùó¢ ùó†ùóòùó¶ùó¶ùóîùóöùóò ùóóùóòùóüùóòùóßùóòùóó: ‚ÄºÔ∏è*`;await conn.sendMessage(from,{text:warningMessage,mentions:[sender]});const ownerMessage=`üö® Anti-photo triggered in *${groupName}*.\nSender: @${sender.split('@')[0]}\nPhoto message has been deleted.`;await conn.sendMessage(botOwner,{text:ownerMessage,mentions:[sender]});}}else{const adminsMention=groupAdmins.map(admin=>`@${admin.split('@')[0]}`).join(' ');const botNotAdminMessage=`‚ö†Ô∏è DilaMD bot does not have admin privileges, but a photo message was detected. Please take action, admins:\n${adminsMention}`;await conn.sendMessage(from,{text:botNotAdminMessage,mentions:groupAdmins});}}}}catch(e){console.error(`Error in auto-delete photo functionality: ${e.message}`);const botOwner=config.OWNER_NUMBER;await conn.sendMessage(botOwner,{text:`‚ö†Ô∏è Error occurred in auto-delete photo functionality: ${e.message}`});}});cmd({on:"video"},async(conn,mek,m,{from,isGroup,isOwner,isAdmins,groupAdmins,isBotAdmins,sender})=>{try{const config=await readEnv();const botOwner=config.OWNER_NUMBER;if(config.ANTI_VIDEO==='true'){if(isGroup){if(isBotAdmins){const senderIsAdmin=groupAdmins.includes(sender);if(!senderIsAdmin&&!isOwner){const key={remoteJid:from,fromMe:false,id:mek.key.id,participant:sender};await conn.sendMessage(from,{delete:key});const warningMessage=`üìπ ~*@${sender.split('@')[0]}*~\n*‚ö†Ô∏è ùó©ùóúùóóùóòùó¢ ùó†ùóòùó¶ùó¶ùóîùóöùóò ùóóùóòùóüùóòùóßùóòùóó: ‚ÄºÔ∏è*`;await conn.sendMessage(from,{text:warningMessage,mentions:[sender]});const ownerMessage=`üö® Anti-video triggered in *${groupName}*.\nSender: @${sender.split('@')[0]}\nVideo message has been deleted.`;await conn.sendMessage(botOwner,{text:ownerMessage,mentions:[sender]});}}else{const adminsMention=groupAdmins.map(admin=>`@${admin.split('@')[0]}`).join(' ');const botNotAdminMessage=`‚ö†Ô∏è DilaMD bot does not have admin privileges, but a video message was detected. Please take action, admins:\n${adminsMention}`;await conn.sendMessage(from,{text:botNotAdminMessage,mentions:groupAdmins});}}}}catch(e){console.error(`Error in auto-delete video functionality: ${e.message}`);const botOwner=config.OWNER_NUMBER;await conn.sendMessage(botOwner,{text:`‚ö†Ô∏è Error occurred in auto-delete video functionality: ${e.message}`});}});
